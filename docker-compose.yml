services:
  mage:
    image: ${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/docker-repo/mage:${VERSION:-latest}
    build: 
      context: .
      dockerfile: docker/Dockerfile.mage
    ports:
      - "6789:6789"
    volumes:
      - ./train-classical-composer-prediction:/train-classical-composer-prediction
      - ./data:/data
      - ./mlflow-artifacts:/mlflow-artifacts
    env_file:
      - .env
    depends_on:
      - mlflow
    networks:
      - shared-network

  mlflow:
    image: ${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/docker-repo/mlflow:${VERSION:-latest}
    build:
      context: .
      dockerfile: docker/Dockerfile.mlflow
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
      - ./mlflow-artifacts:/mlflow-artifacts
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri ${MLFLOW_BACKEND_URI}
      --default-artifact-root file:///mlflow-artifacts
    networks:
      - shared-network

  api:
    image: ${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/docker-repo/api:${VERSION:-latest}
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    ports:
      - "8000:8000"
    volumes:
      - ./templates:/templates
      - ./mlruns:/mlruns
      - ./mlflow-artifacts:/mlflow-artifacts
      - ./data:/data
    env_file:
      - .env
    depends_on:
      - mage
      - mlflow
    networks:
      - shared-network

networks:
  shared-network:
    driver: bridge